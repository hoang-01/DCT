╔════════════════════════════════════════════════════════════════════════════╗
║          DCT 2D DEMO - CYCLONE IV FPGA - QUICK REFERENCE CARD             ║
╚════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────┐
│ 📟 BOARD LAYOUT                                                         │
└─────────────────────────────────────────────────────────────────────────┘

        ┌──────────────────── 7-SEGMENT DISPLAYS ────────────────────┐
        │                                                             │
        │   HEX3    HEX2    HEX1    HEX0                            │
        │   ┌─┐    ┌─┐    ┌─┐    ┌─┐                               │
        │   │8│    │8│    │8│    │8│   ← Shows DCT coefficient     │
        │   └─┘    └─┘    └─┘    └─┘     (16-bit hex)              │
        │                                                             │
        └─────────────────────────────────────────────────────────────┘

     ┌─────────── FPGA CHIP ───────────┐
     │   Cyclone IV EP4CE6E22C8        │
     │   6,272 Logic Elements          │
     │   30 Multipliers                │
     │   50 MHz Clock                  │
     └─────────────────────────────────┘

  DIP SWITCHES          PUSH BUTTONS           LEDs
  ┌─────────────┐      ┌──────────────┐    ┌──────────┐
  │ SW3 SW2     │      │ KEY3 KEY2    │    │ ████████ │
  │ SW1 SW0     │      │ KEY1 KEY0    │    │ LED[7:0] │
  │ ON ↓   ↓ ON │      │ (press down) │    │          │
  └─────────────┘      └──────────────┘    └──────────┘
       ↑                     ↑                   ↑
   Select pattern        Trigger            Status LEDs

┌─────────────────────────────────────────────────────────────────────────┐
│ 🎮 CONTROLS                                                             │
└─────────────────────────────────────────────────────────────────────────┘

DIP SWITCHES (SW[3:0])
┌──────────┬────────────────────────────────────────────────────────────┐
│ SW[1:0]  │ Test Pattern Selection                                     │
├──────────┼────────────────────────────────────────────────────────────┤
│   00     │ DC Pattern (all pixels = 128)                              │
│   01     │ Checkerboard (alternating 0/255)                           │
│   10     │ Horizontal Gradient                                        │
│   11     │ Impulse (single bright pixel)                              │
└──────────┴────────────────────────────────────────────────────────────┘

┌──────────┬────────────────────────────────────────────────────────────┐
│ SW[3:2]  │ Coefficient Display Selection                              │
├──────────┼────────────────────────────────────────────────────────────┤
│   00     │ Display Coefficient #0 (DC component)                      │
│   01     │ Display Coefficient #2                                     │
│   10     │ Display Coefficient #4                                     │
│   11     │ Display Coefficient #6                                     │
└──────────┴────────────────────────────────────────────────────────────┘

PUSH BUTTONS (Active Low)
┌──────────┬────────────────────────────────────────────────────────────┐
│ KEY[0]   │ START COMPUTATION (press to trigger DCT calculation)       │
│ KEY[1]   │ RESET to IDLE (return to ready state)                      │
│ KEY[2]   │ (Reserved)                                                 │
│ KEY[3]   │ (Reserved)                                                 │
└──────────┴────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────┐
│ 📊 STATUS LEDs                                                          │
└─────────────────────────────────────────────────────────────────────────┘

LED[0] = ●  IDLE      (Ready for input)
LED[1] = ●  LOADING   (Loading test pattern)
LED[2] = ●  COMPUTING (DCT calculation in progress)
LED[3] = ●  DISPLAY   (Result ready, showing on 7-segment)

┌─────────────────────────────────────────────────────────────────────────┐
│ 🔢 7-SEGMENT DISPLAY (Hexadecimal 16-bit Signed)                       │
└─────────────────────────────────────────────────────────────────────────┘

Example Values:
┌──────────┬──────────┬──────────────────────────────────────────────────┐
│ Display  │ Decimal  │ Meaning                                          │
├──────────┼──────────┼──────────────────────────────────────────────────┤
│  0000    │     0    │ No frequency content at this coefficient         │
│  0100    │   256    │ Small positive frequency component               │
│  7FFF    │  32767   │ Maximum positive (very strong frequency)         │
│  8000    │ -32768   │ Maximum negative (very strong, inverted)         │
│  FF00    │  -256    │ Small negative frequency component               │
│  FF80    │  -128    │ Typical for checkerboard DC                      │
└──────────┴──────────┴──────────────────────────────────────────────────┘

Converting HEX to DECIMAL:
  If HEX[15] = 0  →  Positive: just convert normally
  If HEX[15] = 1  →  Negative: subtract from 65536
  
  Example: FF80 → 65408 → 65408 - 65536 = -128

┌─────────────────────────────────────────────────────────────────────────┐
│ 🧪 TYPICAL TEST SEQUENCE                                                │
└─────────────────────────────────────────────────────────────────────────┘

Step 1: SELECT PATTERN
  ┌────────────────────────────────────┐
  │ Set SW[1:0] = 01 (Checkerboard)    │
  └────────────────────────────────────┘

Step 2: SELECT COEFFICIENT
  ┌────────────────────────────────────┐
  │ Set SW[3:2] = 00 (DC component)    │
  └────────────────────────────────────┘

Step 3: COMPUTE
  ┌────────────────────────────────────┐
  │ Press KEY[0]                       │
  │ Watch LEDs: [1]→[2]→[3]            │
  └────────────────────────────────────┘

Step 4: READ RESULT
  ┌────────────────────────────────────┐
  │ When LED[3] = ON                   │
  │ Read 7-segment: FF80 = -128        │
  └────────────────────────────────────┘

Step 5: EXPLORE
  ┌────────────────────────────────────┐
  │ Change SW[3:2] to see other coefs  │
  │ Or change SW[1:0] for new pattern  │
  │ Press KEY[0] again                 │
  └────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────┐
│ 📈 EXPECTED RESULTS                                                     │
└─────────────────────────────────────────────────────────────────────────┘

Pattern: DC (all 128)
  ✓ DC coef:  0000  (all zeros - no AC content)
  ✓ All coef: 0000

Pattern: Checkerboard
  ✓ DC coef:  FF80  (-128, slight DC offset)
  ✓ AC coef:  High values (strong high frequency)

Pattern: Gradient
  ✓ DC coef:  Large negative
  ✓ Low freq: Dominant
  ✓ High freq: Small

Pattern: Impulse
  ✓ DC coef:  7F00~ (large positive, ~32000)
  ✓ All freq: Spread across spectrum

┌─────────────────────────────────────────────────────────────────────────┐
│ ⚙️ QUARTUS WORKFLOW                                                     │
└─────────────────────────────────────────────────────────────────────────┘

COMPILE:
  1. Open Quartus II
  2. File → Open Project → dct2d_cyclone4.qpf
  3. Processing → Start Compilation (Ctrl+L)
  4. Wait ~2 minutes
  5. Check: ✓ Compilation Successful

PROGRAM:
  1. Connect board via USB
  2. Tools → Programmer
  3. Hardware Setup → USB-Blaster
  4. Add File → output_files/cyclone4_top.sof
  5. ✓ Program/Configure
  6. Click Start
  7. Wait ~30 seconds
  8. Done! Test on board

COMMAND LINE:
  # Compile
  quartus_sh --flow compile dct2d_cyclone4
  
  # Program
  quartus_pgm -c USB-Blaster -m JTAG \
    -o "p;output_files/cyclone4_top.sof"

┌─────────────────────────────────────────────────────────────────────────┐
│ 🐛 QUICK TROUBLESHOOTING                                                │
└─────────────────────────────────────────────────────────────────────────┘

Problem: 7-segment shows "----"
  → Check if computation finished (LED[3]=1)
  → Try pressing KEY[1] then KEY[0] again

Problem: LEDs not lighting
  → Check board power switch
  → Reprogram with .sof file
  → Verify pin assignments in .qsf

Problem: Wrong values displayed
  → Verify switch positions
  → Check if pattern matches expectation
  → Compare with Python golden model

Problem: Can't program
  → Install USB Blaster driver
  → Try different USB port
  → Check cable connection
  → Restart Quartus Programmer

Problem: Compilation fails
  → Check syntax in cyclone4_top.v
  → Verify all files present
  → Check Quartus version (need 13.0+)

┌─────────────────────────────────────────────────────────────────────────┐
│ 📚 FILES & DOCUMENTATION                                                │
└─────────────────────────────────────────────────────────────────────────┘

hardware/
  cyclone4_top.v         - Main design file (READ THIS!)
  cyclone4.qsf           - Pin assignments
  cyclone4.sdc           - Timing constraints
  HARDWARE_GUIDE.md      - Detailed step-by-step guide
  README_HARDWARE.md     - Overview and comparison
  QUICK_REFERENCE_CARD.txt - This file!

Root project/
  README.md              - Full DCT 2D documentation
  testbench/demo_dct.py  - Python golden model

┌─────────────────────────────────────────────────────────────────────────┐
│ 🔗 RESOURCES                                                            │
└─────────────────────────────────────────────────────────────────────────┘

Quartus Download:  www.intel.com/quartus
Cyclone IV Docs:   www.intel.com/cyclone-iv
USB Blaster:       www.intel.com/usb-blaster
Support Forum:     forum.intel.com/fpga

┌─────────────────────────────────────────────────────────────────────────┐
│ ✅ QUICK CHECKLIST                                                      │
└─────────────────────────────────────────────────────────────────────────┘

Before Starting:
  [ ] Quartus II installed
  [ ] USB Blaster driver working
  [ ] Board connected and powered

Compilation:
  [ ] Project opened
  [ ] All files added
  [ ] Compilation successful (no errors)
  [ ] Timing constraints met

Programming:
  [ ] Programmer opened
  [ ] USB-Blaster detected
  [ ] .sof file loaded
  [ ] Programming successful

Testing:
  [ ] Board responding
  [ ] LEDs working
  [ ] 7-segment displaying
  [ ] Switches controlling input
  [ ] Button triggering computation
  [ ] Results reasonable

╔════════════════════════════════════════════════════════════════════════════╗
║  READY TO GO! Press KEY[0] and watch the magic happen! ✨                 ║
╚════════════════════════════════════════════════════════════════════════════╝

